{
	"version": 3,
	"file": "main.css",
	"sources": [
		"../sass/main.scss",
		"../sass/1-helpers/_variables.scss",
		"../sass/1-helpers/_functions.scss",
		"../sass/1-helpers/_mixins.scss",
		"../sass/3-basics/_base.scss",
		"../sass/5-modules/_mainarea.scss",
		"../sass/5-modules/_project-card.scss",
		"../sass/5-modules/_sidenav.scss"
	],
	"sourcesContent": [
		"// This is the main output for sass. It should only @import/@use other files.\r\n\r\n// 1 - Helpers\r\n@import '1-helpers/variables';\r\n@import '1-helpers/functions';\r\n@import '1-helpers/mixins';\r\n\r\n// 2 - Tools\r\n\r\n// 3 - Basics\r\n@import '3-basics/base';\r\n\r\n// 4 - Layout\r\n\r\n// 5 - modules\r\n@import '5-modules/mainarea';\r\n@import '5-modules/project-card';\r\n@import '5-modules/sidenav';\r\n\r\n// 6 - pages",
		"// This should contain only varible declarations\r\n// (A reminder than css and sass both have their own varibles that behave very differently) \r\n\r\n\r\n// *****************\r\n// Colours\r\n// *****************\r\n\r\n$base-color: #c6538c;\r\n$border-dark: rgba($base-color, 0.88);\r\n\r\n\r\n// *****************\r\n// Font stacks\r\n// *****************\r\n\r\n\r\n\r\n\r\n// Sass mixin media queries varibles\r\n$breakpoints: (\r\n    \"phone\":        400px,\r\n    \"phone-wide\":   480px,\r\n    \"phablet\":      560px,\r\n    \"tablet-small\": 640px,\r\n    \"tablet\":       768px,\r\n    \"tablet-wide\":  1024px,\r\n    \"desktop\":      1248px,\r\n    \"desktop-wide\": 1440px\r\n);",
		"//This file should contain any helpful sass functions. Allowing you to abstract out common formulas and behaviors in a readable way.\r\n//(Essentially if you need to compute a mathematical value or something)(You can also imput arguments into a function such as \"$\"colour\")\r\n\r\n\r\n\r\n// Function for converting a px based font-size to rem.\r\n@function pxToRem($size) {\r\n    @return $size / 16px * 1rem;\r\n  }\r\n   ",
		"// This file should contain reusable defined styles that can be throwin in where useful, clean up stylesheets and prevent non semantic html markeup (like \".float-left\")\r\n// This is also helpul as you can name a mixin something much more concise and informative. (For example \"smooth-transitions\" instead of Transition:(all, 0.15s, ease-out,0s)).\r\n\r\n\r\n\r\n// *****************\r\n// Mixins written by yours truly\r\n// *****************\r\n\r\n\r\n//Mixin that streamlines hiding certain elements by inputting values where it will be hidden between.\r\n@mixin hideElement ($min-size, $max-size) {\r\n    @media screen and (min-width:$min-size) and (max-width:$max-size) {\r\n        display: none;\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// *****************\r\n// Mixins copied in from various sites\r\n// *****************\r\n\r\n\r\n// Mixin that will include the fall back px declaration as well as the calculated rem value.\r\n@mixin fontSize($size) {\r\n    font-size: $size;\r\n    font-size: calculateRem($size);\r\n  }\r\n\r\n// To quickly centre a block element without having to worry about if there is any top or bottom margin already applied.\r\n@mixin push--auto {\r\n    margin: { \r\n        left: auto;\r\n        right: auto;\r\n    }\r\n}\r\n\r\n// When using ::before and ::after you'll always need these three, so we're saving two lines of code every time you use this.\r\n@mixin pseudo($display: block, $pos: absolute, $content: ''){\r\n    content: $content;\r\n    display: $display;\r\n    position: $pos;\r\n}\r\n\r\n// We use this for creating scalable elements (usually images / background images) that maintain a ratio.\r\n@mixin responsive-ratio($x,$y, $pseudo: false) {\r\n    $padding: unquote( ( $y / $x ) * 100 + '%' );\r\n    @if $pseudo {\r\n        &:before {\r\n            @include pseudo($pos: relative);\r\n            width: 100%;\r\n            padding-top: $padding;\r\n        }\r\n    } @else {\r\n        padding-top: $padding;\r\n    }\r\n}\r\n\r\n// This mixin takes all the hassle out of creating that triangle you'll see coming out of most traditional tooltips, all without images, you just specify it's colour, how big you want it, the direction it's going to come out of your element and you're done!\r\n@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false){\r\n    @include pseudo($pos: $position);\r\n    width: 0;\r\n    height: 0;\r\n    @if $round {\r\n        border-radius: 3px;\r\n    }\r\n    @if $direction == down {\r\n        border-left: $size solid transparent;\r\n        border-right: $size solid transparent;\r\n        border-top: $size solid $color;\r\n        margin-top: 0 - round( $size / 2.5 );\r\n    } @else if $direction == up {\r\n        border-left: $size solid transparent;\r\n        border-right: $size solid transparent;\r\n        border-bottom: $size solid $color;\r\n        margin-bottom: 0 - round( $size / 2.5 );\r\n    } @else if $direction == right {\r\n        border-top: $size solid transparent;\r\n        border-bottom: $size solid transparent;\r\n        border-left: $size solid $color;\r\n        margin-right: -$size;\r\n    } @else if  $direction == left {\r\n        border-top: $size solid transparent;\r\n        border-bottom: $size solid transparent;\r\n        border-right: $size solid $color;\r\n        margin-left: -$size;\r\n    }\r\n}\r\n\r\n// Take the pain out of setting styles for a font. (This assumes you have already included the font), set your fallback font once and you never have to worry again.\r\n@mixin font-source-sans($size: false, $colour: false, $weight: false,  $lh: false) {\r\n    font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;\r\n    @if $size { font-size: $size; }\r\n    @if $colour { color: $colour; }\r\n    @if $weight { font-weight: $weight; }\r\n    @if $lh { line-height: $lh; }\r\n}\r\n\r\n// A massive time saver! You can just use pixel values but we have some default breakpoints setup that work too, another time saver while keeping your breakpoints consistent.\r\n@mixin mq($width, $type: min) {\r\n    @if map_has_key($breakpoints, $width) {\r\n        $width: map_get($breakpoints, $width);\r\n        @if $type == max {\r\n            $width: $width - 1px;\r\n        }\r\n        @media only screen and (#{$type}-width: $width) {\r\n            @content;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n",
		"/* base styles  */\r\nhtml {\r\n    box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n    width: 100%;\r\n    height: auto;\r\n}\r\n\r\nh1, h2, h3, h4, h5 {\r\n\r\n}\r\n\r\np {\r\n    font-size: 1rem;\r\n}\r\n\r\n\r\n/* utility */\r\n@media screen and (max-width: 768px) {\r\n    .hide-mobile {\r\n        display: none;\r\n    }\r\n}\r\n\r\n@media screen and (min-width: 768px) and (max-width: 992px) {\r\n    .hide-tablet {\r\n        display: none;\r\n    }\r\n}\r\n\r\n@media screen and (min-width: 992px) and (max-width: 1259px) {\r\n    .hide-desktop {\r\n        display: none;\r\n    }\r\n}\r\n\r\n@media screen and (min-width: 1260px) {\r\n    .hide-desktop-lg {\r\n        display: none;\r\n    }\r\n}",
		"\r\n\r\n\r\n.main {\r\n    margin-left: 160px; /* Same as the width of the sidenav */\r\n  }\r\n\r\n\r\n  .splash-page {\r\n    background-image: url(\"/images/pexels-david-bartus-963278.jpg\");\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    background-position: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n\r\n    h1 {\r\n      font-size: 5rem;\r\n      padding:5rem;\r\n      color: blue;\r\n    }\r\n\r\n    p {\r\n      font-size: 2rem;\r\n      color: yellow;\r\n      padding: 5rem;\r\n    }\r\n  }\r\n\r\n\r\n  \r\n  @media screen and (max-height: 450px) {\r\n    .sidenav {padding-top: 15px;}\r\n    .sidenav a {font-size: 18px;}\r\n  }\r\n  ",
		".sidenav {\r\n    height: 100%;\r\n    width: 160px;\r\n    position: fixed;\r\n    z-index: 1;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: #111;\r\n    overflow-x: hidden;\r\n    padding-top: 20px;\r\n  }\r\n  \r\n  .sidenav a {\r\n    padding: 6px 8px 6px 16px;\r\n    text-decoration: none;\r\n    font-size: 25px;\r\n    color: #818181;\r\n    display: block;\r\n  }\r\n  \r\n  .sidenav a:hover {\r\n    color: #f1f1f1;\r\n  }",
		".sidenav {\r\n    height: 100%;\r\n    width: 160px;\r\n    position: fixed;\r\n    z-index: 1;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: #111;\r\n    overflow-x: hidden;\r\n    padding-top: 20px;\r\n  }\r\n  \r\n  .sidenav a {\r\n    padding: 6px 8px 6px 16px;\r\n    text-decoration: none;\r\n    font-size: 25px;\r\n    color: #818181;\r\n    display: block;\r\n  }\r\n  \r\n  .sidenav a:hover {\r\n    color: #f1f1f1;\r\n  }"
	],
	"names": [],
	"mappings": "AIAA,kBAAkB;;AAClB,AAAA,IAAI,CAAC;EACD,UAAU,EAAE,UAAU;CACzB;;;AAED,AAAA,IAAI,CAAC;EACD,KAAK,EAAE,IAAI;EACX,MAAM,EAAE,IAAI;CACf;;;AAMD,AAAA,CAAC,CAAC;EACE,SAAS,EAAE,IAAI;CAClB;;AAGD,aAAa;AACb,MAAM,CAAC,MAAM,MAAM,SAAS,EAAE,KAAK;;EAC/B,AAAA,YAAY,CAAC;IACT,OAAO,EAAE,IAAI;GAChB;;;AAGL,MAAM,CAAC,MAAM,MAAM,SAAS,EAAE,KAAK,OAAO,SAAS,EAAE,KAAK;;EACtD,AAAA,YAAY,CAAC;IACT,OAAO,EAAE,IAAI;GAChB;;;AAGL,MAAM,CAAC,MAAM,MAAM,SAAS,EAAE,KAAK,OAAO,SAAS,EAAE,MAAM;;EACvD,AAAA,aAAa,CAAC;IACV,OAAO,EAAE,IAAI;GAChB;;;AAGL,MAAM,CAAC,MAAM,MAAM,SAAS,EAAE,MAAM;;EAChC,AAAA,gBAAgB,CAAC;IACb,OAAO,EAAE,IAAI;GAChB;;;;ACtCL,AAAA,KAAK,CAAC;EACF,WAAW,EAAE,KAAK;EAAE,sCAAsC;CAC3D;;;AAGD,AAAA,YAAY,CAAC;EACX,gBAAgB,EAAE,6CAA6C;EAC/D,iBAAiB,EAAE,SAAS;EAC5B,eAAe,EAAE,KAAK;EACtB,mBAAmB,EAAE,MAAM;EAC3B,KAAK,EAAE,IAAI;EACX,MAAM,EAAE,KAAK;CAad;;;AAnBD,AAQE,YARU,CAQV,EAAE,CAAC;EACD,SAAS,EAAE,IAAI;EACf,OAAO,EAAC,IAAI;EACZ,KAAK,EAAE,IAAI;CACZ;;;AAZH,AAcE,YAdU,CAcV,CAAC,CAAC;EACA,SAAS,EAAE,IAAI;EACf,KAAK,EAAE,MAAM;EACb,OAAO,EAAE,IAAI;CACd;;AAKH,MAAM,CAAC,MAAM,MAAM,UAAU,EAAE,KAAK;;EAClC,AAAA,QAAQ,CAAC;IAAC,WAAW,EAAE,IAAI;GAAG;;EAC9B,AAAA,QAAQ,CAAC,CAAC,CAAC;IAAC,SAAS,EAAE,IAAI;GAAG;;;;ACjClC,AAAA,QAAQ,CAAC;EACL,MAAM,EAAE,IAAI;EACZ,KAAK,EAAE,KAAK;EACZ,QAAQ,EAAE,KAAK;EACf,OAAO,EAAE,CAAC;EACV,GAAG,EAAE,CAAC;EACN,IAAI,EAAE,CAAC;EACP,gBAAgB,EAAE,IAAI;EACtB,UAAU,EAAE,MAAM;EAClB,WAAW,EAAE,IAAI;CAClB;;;AAED,AAAA,QAAQ,CAAC,CAAC,CAAC;EACT,OAAO,EAAE,gBAAgB;EACzB,eAAe,EAAE,IAAI;EACrB,SAAS,EAAE,IAAI;EACf,KAAK,EAAE,OAAO;EACd,OAAO,EAAE,KAAK;CACf;;;AAED,AAAA,QAAQ,CAAC,CAAC,AAAA,MAAM,CAAC;EACf,KAAK,EAAE,OAAO;CACf;;;ACtBH,AAAA,QAAQ,CAAC;EACL,MAAM,EAAE,IAAI;EACZ,KAAK,EAAE,KAAK;EACZ,QAAQ,EAAE,KAAK;EACf,OAAO,EAAE,CAAC;EACV,GAAG,EAAE,CAAC;EACN,IAAI,EAAE,CAAC;EACP,gBAAgB,EAAE,IAAI;EACtB,UAAU,EAAE,MAAM;EAClB,WAAW,EAAE,IAAI;CAClB;;;AAED,AAAA,QAAQ,CAAC,CAAC,CAAC;EACT,OAAO,EAAE,gBAAgB;EACzB,eAAe,EAAE,IAAI;EACrB,SAAS,EAAE,IAAI;EACf,KAAK,EAAE,OAAO;EACd,OAAO,EAAE,KAAK;CACf;;;AAED,AAAA,QAAQ,CAAC,CAAC,AAAA,MAAM,CAAC;EACf,KAAK,EAAE,OAAO;CACf"
}